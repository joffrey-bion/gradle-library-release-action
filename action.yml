name: 'Gradle library release'
description: 'Builds, publishes, generates the change log, and creates a GitHub release'
branding:
  icon: 'arrow-up-circle'
  color: 'red'
inputs:
  version:
    description: 'The new version to publish'
    required: true
  github-token:
    description: 'The GitHub token to access issues for the change log generation'
    default: ${{ github.token }}
    required: true
  gpg-signing-key:
    description: 'The ASCII-armored private GPG key to sign artifacts'
    required: true
  gpg-signing-password:
    description: 'The password of the private GPG key'
    required: true
  sonatype-username:
    description: 'The username to connect to the Sonatype Nexus (e.g. OSSRH for Maven Central)'
    required: true
  sonatype-password:
    description: 'The password to connect to the Sonatype Nexus (e.g. OSSRH for Maven Central)'
    required: true
  changelog-commit-username:
    description: 'The git user.name for the change log commit author'
    default: 'github-actions[bot]'
    required: true
  changelog-commit-email:
    description: 'The git user.email for the change log commit author'
    default: '41898282+github-actions[bot]@users.noreply.github.com'
    required: true
  extra-gradle-args:
    description: 'Extra arguments to pass to the Gradle command line'
    required: false
outputs:
  changelog-path:
    description: "The path to the generated changelog file"
    value: CHANGELOG.md
  release-notes-path:
    description: "The path to the generated release notes"
    value: build/reports/changelog/latest-release-body.md
runs:
  using: "composite"
  steps:
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build and publish to OSS Sonatype and then Maven Central
        env:
          # For changelog generation
          GITHUB_TOKEN: ${{ inputs.github-token }}
          # GPG keys for signing plugin (sign maven artifacts)
          # see https://docs.gradle.org/current/userguide/signing_plugin.html#sec:in-memory-keys
          ORG_GRADLE_PROJECT_signingKey: ${{ inputs.gpg-signing-key }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ inputs.gpg-signing-password }}
          # Credentials implicitly read by the gradle-nexus-publish-plugin
          # https://github.com/gradle-nexus/publish-plugin#publishing-to-maven-central-via-sonatype-ossrh
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ inputs.sonatype-username }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ inputs.sonatype-password }}
        shell: bash
        # There are issues with the configuration cache when publishing, hence the --no-configuration-cache argument.
        # See https://scans.gradle.com/s/ur3xe6d353a2e for an example release build failure due to this.
        # 1) Dokka doesn't support it (https://github.com/Kotlin/dokka/issues/1217) but they marked their tasks incompatible.
        # 2) GitHub Changelog Generator doesn't support it (https://github.com/joffrey-bion/gradle-github-changelog/issues/92),
        #    I marked the task as not supporting it, but it seems the extension might also cause problems.
        # 3) The Gradle Nexus Publish Plugin doesn't support it (https://github.com/gradle-nexus/publish-plugin/issues/221)
        #    and this may cause failures like "No staging repository with name sonatype created" during the build. 
        run: ./gradlew check generateChangelog publishToSonatype closeAndReleaseSonatypeStagingRepository -Pversion=${{ inputs.version }} --no-configuration-cache ${{ inputs.extra-gradle-args }}

      - name: Commit and push change log
        id: changelog-commit
        shell: bash
        run: |
          git config --global user.name "${{ inputs.changelog-commit-username }}"
          git config --global user.email "${{ inputs.changelog-commit-email }}"

          git add CHANGELOG.md
          git commit -m "Version ${{ inputs.version }}"
          git push
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Create release and tag
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.version }}
          target_commitish: ${{ steps.changelog-commit.outputs.sha }}
          body_path: build/reports/changelog/latest-release-body.md
